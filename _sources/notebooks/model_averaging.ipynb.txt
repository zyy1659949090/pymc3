{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "plt.style.use(['seaborn-darkgrid', 'seaborn-colorblind'])\n",
    "import pymc3 as pm\n",
    "import numpy as np\n",
    "import  pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Model averaging\n",
    "\n",
    "When confronted with more than one model we have several options. One of them is to perform model selection, using for example a given Information Criterion as exemplified [in this notebook](model_comparsion.ipynb) and this other [example](model_comparsion.ipynb). Model selection is appealing for its simplicity, but we are discarding information about the uncertainty in our models. This is somehow similar to computing the full posterior and then just keep a point-estimate like the posterior mean; we may become overconfident of what we really know.\n",
    "\n",
    "One alternative is to perform model selection but discuss all the different models together with the computed values of a given Information Criterion. It is important to put all these numbers and tests in the context of our problem so that we and our audience can have a better feeling of the possible limitations and shortcomings of our methods. If you are in the academic world you can use this approach to add elements to the discussion section of a paper, presentation, thesis, and so on.\n",
    "\n",
    "Yet another approach is to perform model averaging. The idea now is to generate a meta-model (and meta-predictions) using a weighted average of the models. There are several ways to do this and PyMC3 includes 3 of them that we are going to briefly discuss, you will find a more thorough explanation in the work by [Yuling Yao et. al.](https://arxiv.org/abs/1704.02030)\n",
    "\n",
    "## Pseudo Bayesian model averaging\n",
    "\n",
    "Bayesian models can be weighted by their marginal likelihood, this is known as Bayesian Model Averaging. While this is theoretically appealing, is problematic in practice: on the one hand the marginal likelihood is highly sensible to the specification of the prior, in a way that parameter estimation is not, and on the other computing the marginal likelihood is usually a challenging task. An alternative route is to use the values of WAIC (Widely Applicable Information Criterion) or LOO (pareto-smoothed importance sampling Leave-One-Out cross-validation), which we will call generically IC, to estimate weights. We can do this by using the following formula:\n",
    "\n",
    "$$w_i = \\frac {e^{ \\frac{1}{2} dIC_i }} {\\sum_j^M e^{ - \\frac{1}{2} dIC_j }}$$\n",
    "\n",
    "Where $dIC_i$ is the difference between the i-esim information criterion value and the lowest one. Remember that the lowest the value of the IC, the better. We can use any information criterion we want to compute a set of weights, but, of course, we cannot mix them. \n",
    "\n",
    "This approach is called pseudo Bayesian model averaging, or Akaike-like weighting and is an heuristic way to compute the relative probability of each model (given a fixed set of models) from the information criteria values. Look how the denominator is just a normalization term to ensure that the weights sum up to one.\n",
    "\n",
    "## Pseudo Bayesian model averaging with Bayesian Bootstrapping\n",
    "\n",
    "The above formula for computing weights is a very nice and simple approach, but with one major caveat it does not take into account the uncertainty in the computation of the IC. We could compute the standard error of the IC (assuming a Gaussian approximation) and modify the above formula accordingly. Or we can do something more robust, like using a [Bayesian Bootstrapping](http://www.sumsar.net/blog/2015/04/the-non-parametric-bootstrap-as-a-bayesian-model/) to estimate, and incorporate this uncertainty.\n",
    "\n",
    "## Stacking\n",
    "\n",
    "The third approach implemented in PyMC3 is know as _stacking of predictive distributions_ and it has been recently [proposed](https://arxiv.org/abs/1704.02030). We want to combine several models in a metamodel in order to minimize the diverge between the meta-model and the _true_ generating model, when using a logarithmic scoring rule this is equivalently to:\n",
    "\n",
    "$$\\max_{n} \\frac{1}{n} \\sum_{i=1}^{n}log\\sum_{k=1}^{K} w_k p(y_i|y_{-i}, M_k)$$\n",
    "\n",
    "Where $n$ is the number of data points and $K$ the number of models. To enforce a solution we constrain $w$ to be $w_k \\ge 0$ and  $\\sum_{k=1}^{K} w_k = 1$. \n",
    "\n",
    "The quantity $p(y_i|y_{-i}, M_k)$ is the leave-one-out predictive distribution for the $M_k$ model. Computing it requires fitting each model $n$ times, each time leaving out one data point. Fortunately we can approximate the exact leave-one-out predictive distribution using LOO (or even WAIC), and that is what we do in practice.\n",
    "\n",
    "## Weighted posterior predictive samples\n",
    "\n",
    "Once we have computed the weights, using any of the above 3 methods,  we can use them to get a weighted posterior predictive samples. PyMC3 offers functions to perform these steps in a simple way, so let see them in action using an example.\n",
    "\n",
    "The following example is taken from the superb book [Statistical Rethinking](http://xcelab.net/rm/statistical-rethinking/) by Richard McElreath. You will find more PyMC3 examples from this book in this [repository](https://github.com/aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3). We are going to explore a simplified version of it. Check the book for the whole example and a more thorough discussion of both, the biological motivation for this problem and a theoretical/practical discussion of using Information Criteria to compare, select and average models.\n",
    "\n",
    "Briefly, our problem is as follows: We want to explore the composition of milk across several primate species, it is hypothesized that females from species of primates with larger brains produce more _nutritious_ milk (loosely speaking this is done _in order to_ support the development of such big brains). This is an important question for evolutionary biologists and try to give and answer we will use 3 variables, two predictor variables: the proportion of neocortex compare to the total mass of the brain and the logarithm of the body mass of the mothers. And for predicted variable, the kilocalories per gram of milk. With these variables we are going to build 3 different linear models:\n",
    " \n",
    "1. A model using only the neocortex variable\n",
    "2. A model using only the logarithm of the mass variable\n",
    "3. A model using both variables\n",
    "\n",
    "Let start by uploading the data and centering the `neocortex` and `log mass` variables, for better sampling."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>kcal.per.g</th>\n",
       "      <th>neocortex</th>\n",
       "      <th>log_mass</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.49</td>\n",
       "      <td>-0.123706</td>\n",
       "      <td>-0.831353</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.47</td>\n",
       "      <td>-0.030706</td>\n",
       "      <td>0.158647</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.56</td>\n",
       "      <td>-0.030706</td>\n",
       "      <td>0.181647</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.89</td>\n",
       "      <td>0.000294</td>\n",
       "      <td>-0.579353</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.92</td>\n",
       "      <td>0.012294</td>\n",
       "      <td>-1.885353</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   kcal.per.g  neocortex  log_mass\n",
       "0        0.49  -0.123706 -0.831353\n",
       "1        0.47  -0.030706  0.158647\n",
       "2        0.56  -0.030706  0.181647\n",
       "3        0.89   0.000294 -0.579353\n",
       "4        0.92   0.012294 -1.885353"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d = pd.read_csv('../data/milk.csv')\n",
    "d.iloc[:,1:] = d.iloc[:,1:] - d.iloc[:,1:].mean()\n",
    "d.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we have the data we are going to build our first model using only the `neocortex`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Auto-assigning NUTS sampler...\n",
      "Initializing NUTS using jitter+adapt_diag...\n",
      "100%|██████████| 2500/2500 [00:03<00:00, 752.92it/s]\n"
     ]
    }
   ],
   "source": [
    "with pm.Model() as model_0:\n",
    "    alpha = pm.Normal('alpha', mu=0, sd=10)\n",
    "    beta = pm.Normal('beta', mu=0, sd=10)\n",
    "    epsilon = pm.HalfNormal('epsilon', 10)\n",
    "    \n",
    "    mu = alpha + beta * d['neocortex']\n",
    "    \n",
    "    kcal = pm.Normal('kcal', mu=mu, sd=epsilon, observed=d['kcal.per.g'])\n",
    "    trace_0 = pm.sample(2000)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For the first model I am going to check the posterior using the `traceplot` function, you can do the same for the other models."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nFGLKlCl48MEHw6auv/nmG2zZsgUAYDAYkJ+fj7Vr1+KVV15BWloaAOChhx7CRRddFFK9J06cwGuv\nvYZPPvkEZWVlePrpp8EwDIYMGYLnn38eAoGA9/672jdYWvPz87Fy5UoIhUJIJBKsWbMGSUlJYdXX\nstd76tQpr5+tUNftY489hoaGBgDA+fPnMW7cOLzxxhu47777oFAoIBaLIZVK8cEHHwRdK997a/Dg\nwaFpt1wPY9euXdxTTz3FcRzHHT9+nLvvvvs67LN27Vrulltu4T777DOO4ziutLSUu/fee4Oq04on\nvVlZWVxjY6PDdytXruS+/vprjuM47t///jf30UcfBUUrx3VN78GDB7kVK1YETaM97vSqVCruuuuu\ns+ndsGED19jYyP3nP//h3n77bY7jOG779u3cypUrw1pvOLdfK99//z33+OOPcxwX3u3Xir3ecG2/\nSqWSmz59OmcwGDiFQsFdeeWVHMdxYdt+XekNZfsNd7xtr8Hkq6++4latWsVxHMc1NTVx06dP5774\n4gvuww8/dNgvLy+Py87O5liW5c6fP8/NmzcvFHI5vV7P3XjjjQ7fzZkzhysrK+NYluXuvvtuLi8v\nLyzr+oUXXuA+//xz7vXXX+d27tzpsC2Uejds2MBdf/313Pz58zmO47h7772X++233ziO47jnnnuO\n+/HHH13ef759g6n11ltv5U6fPs1xHMdt2rSJe+mllziOC5++lrPezjxboa5bKwqFgpszZw5XW1vL\ncRzHXXvttRzLsg77BFsr33srVO02bOZ4+QtPael37twJhmEwbdo023enTp1CbW0tsrOzcc899+Dc\nuXNhoZdlWZSVlSEnJwdZWVn46quvOhwzbdo0HDp0KKz15uXl4dSpU7jtttvw8MMPo66uLiz0Hj9+\nHEOHDsWaNWuwaNEiJCUlISEhoUP9Hj58OKz1hmv7taLVarFu3To888wzHY4Jp/brSm+4tt/IyEj0\n7t0bOp0OOp3OttxEuLZfV3pD2X7DnWAss9JZZs2ahUceecT2WSgUIi8vD7/88gtuvfVWLF++HGq1\nGkePHsWUKVPAMAx69+4Ni8WCpqamoOstKCiATqfDnXfeidtvvx1HjhyB0WhEv379wDAMpkyZgsOH\nD4ddXf/11184e/YsFixYgFOnTuHrr7/GokWLsHr1apjN5pDq7devH9atW2f7fOrUKVxyySUA2t/p\n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\nBEEQBEEQBEEEGDK8CIIgCIIgCIIgAgwZXgRBEARBEARBEAGGDC+CIAiCIAiCIIgAQ4YXQYSIZiTk\nGwAAIABJREFU33//Hddff32njvnyyy+xcePGACkiCIIgCNfQ7xZB+AYZXgTRjTh69Cj0en2oZRAE\nQRCEV9DvFkG0Iwq1AIK4kNFqtXj44YdRVlaGmJgYrFixAunp6Xjttddw5MgRWCwWjBw5Es8++ywO\nHz6MvXv34uDBg4iIiMDMmTORk5ODxsZG1NfXIz09HW+++SYSExNDfVkEQRBED4V+twii65DHiyBC\nSHV1Ne644w5s27YN119/PZ588kls2LABQqEQ33zzDb799lukpKTgtddew4wZM3D11VfjjjvuwK23\n3oodO3Zg/Pjx2Lx5M/bs2YOIiAhs27Yt1JdEEARB9GDod4sgug55vAgihAwbNgwTJ04EAMydOxcv\nvPACTCYTdDodDh06BAAwmUy8o4GLFy/Gn3/+iY8++gilpaU4c+YMxo0bF1T9BEEQxIUF/W4RRNch\nw4sgQohA4Oh0ZhgGALB8+XJMnz4dAKDRaGAwGDoc++qrr+LkyZO4+eabcemll8JsNoPjuMCLJgiC\nIC5Y6HeLILoOhRoSRAgpLCxEfn4+AGDz5s2YNGkSpk2bho0bN8JoNIJlWTz33HN4/fXXAQBCoRBm\nsxkAcODAASxevBg33XQTEhMTcejQIVgslpBdC0EQBNHzod8tgug65PEiiBCSkZGBd955BxUVFUhM\nTMTq1auRmJiINWvWYO7cubBYLBgxYgSefvppAMC0adOwevVqAMADDzyAV155BW+99RbEYjEmTpyI\n8vLyUF4OQRAE0cOh3y2C6DoMRz5egiAIgiAIgiCIgEKhhgRBEARBEARBEAEmaIYXy7LIycnBggUL\nkJ2djbKyMoftq1atwrx585CdnY3s7GyoVKpgSSMIgiCILtPY2Ijp06ejuLg41FIIgiCIMCZoc7x2\n794No9GIzZs3Izc3F6tXr8b69ett20+dOoUPPvgACQkJwZJEEARBED5hMpmQk5ODiIiIUEshCIIg\nwpygebyOHj2KqVOnAgDGjx+PvLw82zaWZVFWVoacnBxkZWXhq6++CpYsgiAIgugya9asQVZWFlJS\nUkIthSAIgghzgubxUqvVkMvlts/W9KIikQharRa33XYb/vGPf8BiseD222/H6NGjMXz4cIcy6usp\n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\n56Nv3754+umn8fHHHyMjIwN///vfPWQP1/Uol8vxwAMP4P3338fLL7+MZ555xiVcjJUr0uZ6zZo1\neOyxxwDYv/eff/55fPzxxzAYDNi4cWNY5b3lllscVakBgGEYUC3d2vnmk/0/13tDKWtycjIA4ODB\ng/joo49w//33w2Aw4N5778Xrr7+OdevW4ZNPPkFZWVlY7qfu8vrz2Qr33AJATU0N9uzZg6lTpwKw\nh/jNmTMHf//737F69Wq8+uqrqKmpCbmsXPetcF23IevjFSy8lakXso9er0dMTExQZfSHtoynT58+\nEIlEAIBBgwahsrLS5SIJJ77GYzQasWTJEqhUKrz44ose+0Tb+nCNJ5rXBwDuvfde3H333XjooYew\nd+/eiF2ftoylX79+Ubk2//rXv1BZWYn77rsPly5dgkQiQefOnSN2bYC2jWfw4MERuz6hoC3fB6Gg\noqICjz32GGbOnIk77rgDDQ0Njmtt/PjxWLp0KQoKCiKiTUxWVha6dOkCiqKQlZUFjUaDuro6F7li\nYmLQ3NwcMXPd0NCA8vJyDB06FABw5513Oua3oKAA3377LTQaTcTI65zrws4nX5sgrveGmm3btuHd\nd9/F2rVrER8fD6vVitmzZzsM8qFDh6KsrMwxBrlcHjZZx48fL/izFQlzu337dkycONFx305MTMSM\nGTMgFouRkJCAXr164Y8//giLrO73rddff91DhlBct1Hv8fJWpt7bPv/5z38AADt37sTAgQODKqM/\ntGU8q1evxocffgjAHlaRlpYWMYqJt/EwDINHH30UPXv2xCuvvOL4oEbr+vCNJ1rXp7y83FEcRCKR\nQCqVgqbpiF2ftowlWtfm6aefxqZNm7BhwwZMmTIF999/P0aNGhWxawO0bTyRvD6hoC3fB8Gmuroa\nc+bMwaJFizBt2jQAwAMPPICjR48CAPbs2YPevXtjwIAB2L17N2w2Gy5fvgybzRaWQi+bN2/GypUr\nAQCVlZVoamqCUqnE+fPnwTAMdu/ejUGDBkXUXO/fvx833XQTAPv3yqRJk3DlyhUArvMbKfLm5eVh\n3759AOz3HXY+udaf672h5Msvv8RHH32EDRs2ICMjAwBw9uxZzJw5E1arFWazGQcPHnTMcbjvp/58\ntsI9t6yMzuHiv/76K+bPnw/AbrCcOnUK2dnZIZeV674Vruu2w1Q15CtTzzJ27Fh88803kMlkaGpq\nwuLFi1FVVQWJRIJVq1YhKSkpjKNopS3jqa+vx6JFi2AwGCASifDCCy8gJycnjKNoxdt4bDYbnnrq\nKfTv39/x/qeeegq5ublRuT5848nOzo7K9SkoKMDq1auxc+dOUBSFkSNH4vHHH4/Yz09bxhKtnx3n\ne8Hbb7+NxMREFBUVRezaAG0bTySvTyjgmrNwj3/ZsmX45ptvkJ2d7fjf/Pnz8frrr0MikSAxMRFL\nly6FWq3G22+/jZ07d8Jms+GZZ54JiyJoMpnwzDPP4PLly6AoCgsXLgRN01ixYgWsVitGjBiBBQsW\nRNRcr1u3DmKxGPfffz8AYPfu3Xjrrbcgl8uRk5OD5557DiKRKKzyXrx4EU899RSKi4vxxx9/4Pnn\nn4fZbEZ2djaWLVsGkUjEuf587w2FrJ9++imGDRuG1NRUh8di8ODBeOKJJ/Dee+9h+/btkEgkmDx5\nMoqKilBdXY3FixdDr9cjLi4Oq1atglKpDKqszvIWFxejtLQUS5cuFfTZCufcFhcXAwBuv/12fPrp\npy4eoeXLl+PIkSOgaRoPPvggxo0bF3JZue5bzz77LJYtWxby6zbqDS8CgUAgEAgEAoFAiHSiPtSQ\nQCAQCAQCgUAgECIdYngRCAQCgUAgEAgEQpAhhheBQCAQCAQCgUAgBBlieBEIBAKBQCAQCARCkCGG\nF4FAIBAIBAKBQCAEGWJ4EQgEAoFAIBAIBEKQIYYXgUAgEAgEAoFAIASZ/w87OOC0VMekywAAAABJ\nRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f66c4b734a8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pm.traceplot(trace_0);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The second model is exactly the same as the first one, except we now use the logarithm of the mass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Auto-assigning NUTS sampler...\n",
      "Initializing NUTS using jitter+adapt_diag...\n",
      "100%|██████████| 2500/2500 [00:03<00:00, 709.73it/s]\n"
     ]
    }
   ],
   "source": [
    "with pm.Model() as model_1:\n",
    "    alpha = pm.Normal('alpha', mu=0, sd=10)\n",
    "    beta = pm.Normal('beta', mu=0, sd=1)\n",
    "    sigma = pm.HalfNormal('sigma', 10)\n",
    "    \n",
    "    mu = alpha + beta * d['log_mass']\n",
    "    \n",
    "    kcal = pm.Normal('kcal', mu=mu, sd=sigma, observed=d['kcal.per.g'])\n",
    "    \n",
    "    trace_1 = pm.sample(2000)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And finally the third model using the `neocortex` and `log_mass` variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Auto-assigning NUTS sampler...\n",
      "Initializing NUTS using jitter+adapt_diag...\n",
      "100%|██████████| 2500/2500 [00:04<00:00, 503.03it/s]\n"
     ]
    }
   ],
   "source": [
    "with pm.Model() as model_2:\n",
    "    alpha = pm.Normal('alpha', mu=0, sd=10)\n",
    "    beta = pm.Normal('beta', mu=0, sd=1, shape=2)\n",
    "    sigma = pm.HalfNormal('sigma', 10)\n",
    "\n",
    "    mu = alpha + pm.math.dot(beta, d[['neocortex','log_mass']].T)\n",
    "\n",
    "    kcal = pm.Normal('kcal', mu=mu, sd=sigma, observed=d['kcal.per.g'])\n",
    "\n",
    "    trace_2 = pm.sample(2000)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we have sampled the posterior for the 3 models, we are going to use WAIC (Widely applicable information criterion) to compare the 3 models. We can do this using the `compare` function included with PyMC3."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAIC</th>\n",
       "      <th>pWAIC</th>\n",
       "      <th>dWAIC</th>\n",
       "      <th>weight</th>\n",
       "      <th>SE</th>\n",
       "      <th>dSE</th>\n",
       "      <th>warning</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-15.6028</td>\n",
       "      <td>2.58324</td>\n",
       "      <td>0</td>\n",
       "      <td>0.886902</td>\n",
       "      <td>4.87873</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-9.06902</td>\n",
       "      <td>1.94716</td>\n",
       "      <td>6.53382</td>\n",
       "      <td>0.0463751</td>\n",
       "      <td>3.90116</td>\n",
       "      <td>2.22293</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-7.21287</td>\n",
       "      <td>1.92019</td>\n",
       "      <td>8.38997</td>\n",
       "      <td>0.0667233</td>\n",
       "      <td>3.06726</td>\n",
       "      <td>4.23772</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      WAIC    pWAIC    dWAIC     weight       SE      dSE warning\n",
       "2 -15.6028  2.58324        0   0.886902  4.87873        0       1\n",
       "1 -9.06902  1.94716  6.53382  0.0463751  3.90116  2.22293       1\n",
       "0 -7.21287  1.92019  8.38997  0.0667233  3.06726  4.23772       0"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "traces = [trace_0, trace_1, trace_2]\n",
    "models = [model_0, model_1, model_2]\n",
    "comp = pm.compare(traces, models, method='BB-pseudo-BMA')\n",
    "comp"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see that the best model is `model_2`, the one with both predictor variables. Notice the DataFrame is ordered from lowest to highest WAIC (_i.e_ from _better_ to _worst_ model). Check [this notebook](model_comparison.ipynb) for a more detailed discussing on model comparison.\n",
    "\n",
    "We can also see that we get a column with the relative `weight` for each model (according to the first equation at the beginning of this notebook). This weights can be _vaguely_ interpreted as the probability that each model will make the correct predictions on future data. Of course this interpretation is conditional on the models used to compute the weights, if we add or remove models the weights will change. And also is dependent on the assumptions behind WAIC (or any other Information Criterion used). So try to do not overinterpret these `weights`. \n",
    "\n",
    "Now we are going to use copmuted `weights` to generate predictions based not on a single model but on the weighted set of models. This is one way to perform model averaging. Using PyMC3 we can call the `sample_ppc_w` function as follows:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 1000/1000 [00:01<00:00, 872.82it/s]\n"
     ]
    }
   ],
   "source": [
    "ppc_w = pm.sample_ppc_w(traces, 1000, models, weights=comp.weight.sort_index(ascending=True))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Notice that we are passing the weights ordered by their index. We are doing this because we pass `traces` and `models` ordered from model 0 to 2, but the computed weights are ordered from lowest to highest WAIC (or equivalently from larger to lowest weight). In summary, we must be sure that we are correctly pairing the weights and models.\n",
    "\n",
    "We are also going to compute PPCs for the lowest-WAIC model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 1000/1000 [00:00<00:00, 1580.25it/s]\n"
     ]
    }
   ],
   "source": [
    "ppc_2 = pm.sample_ppc(trace_2, 1000, model_2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A simple way to compare both kind of predictions is to plot their mean and hpd interval"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f66c46fdfd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "mean_w = ppc_w['kcal'].mean()\n",
    "hpd_w = pm.hpd(ppc_w['kcal']).mean(0)\n",
    "\n",
    "mean = ppc_2['kcal'].mean()\n",
    "hpd = pm.hpd(ppc_2['kcal']).mean(0)\n",
    "\n",
    "plt.errorbar(mean, 1, xerr=[[mean - hpd]], fmt='o', label='model 2')\n",
    "plt.errorbar(mean_w, 0, xerr=[[mean_w - hpd_w]], fmt='o', label='weighted models')\n",
    "\n",
    "plt.yticks([])\n",
    "plt.ylim(-1, 2)\n",
    "plt.xlabel('kcal per g')\n",
    "plt.legend();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As we can see the mean value is almost the same for both predictions but the uncertainty in the weighted model is larger. We have effectively propagated the uncertainty about which model we should select to the posterior predictive samples. You can now try with the other two methods for computing weights `stacking` (the default and recommended method) and `pseudo-BMA`.\n",
    "\n",
    "**Final notes:** \n",
    "\n",
    "There are other ways to average models such as, for example, explicitly building a meta-model that includes all the models we have. We then perform parameter inference while jumping between the models. One problem with this approach is that jumping between models could hamper the proper sampling of the posterior.\n",
    "\n",
    "Besides averaging discrete models we can sometimes think of continuous versions of them. A toy example is to imagine that we have a coin and we want to estimated it's degree of bias, a number between 0 and 1 being 0.5 equal chance of head and tails. We could think of two separated models one with a prior biased towards heads and one towards tails. We could fit both separate models and then average them using, for example, IC-derived weights. An alternative, is to build a hierarchical model to estimate the prior distribution, instead of contemplating two discrete models we will be computing a continuous model that includes these the discrete ones as particular cases. Which approach is better? That depends on our concrete problem. Do we have good reasons to think about two discrete models, or is our problem better represented with a continuous bigger model?"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
